Bootstrap: docker
From: nvidia/cuda:12.4.1-cudnn-devel-ubuntu22.04

%files
    ./envs/maniskill3/environment.yaml /my_container/setup/envs/maniskill3/environment.yaml
    ./requirements.txt /my_container/setup/requirements.txt
    ./singularity/nvidia_icd.json /usr/share/vulkan/icd.d/nvidia_icd.json
    ./singularity/10_nvidia.json /usr/share/glvnd/egl_vendor.d/10_nvidia.json
    ./singularity/nvidia_layers.json /etc/vulkan/implicit_layer.d/nvidia_layers.json
%post
        apt-get update && apt-get upgrade -y && rm -rf /var/lib/apt/lists/*
        apt-get update \
        && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
                build-essential \
                software-properties-common \
                ca-certificates \
                cmake \
                wget \
                curl \
                unzip \
                libegl1 \
                libxext6 \
                libvulkan1 \
                vulkan-tools \
                libnvidia-gl-550 \
                libnvidia-common-550 \
        && rm -rf /var/lib/apt/lists/*
        
        # Update and register CA certificates if not done already, needed to avoid SSL error on narval cluster
        update-ca-certificates
        mkdir -p /etc/pki/tls/certs
        ln -s /etc/ssl/certs/ca-certificates.crt /etc/pki/tls/certs/ca-bundle.crt
        
        # Install Miniconda3
        wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O /my_container/setup/miniconda.sh
        bash /my_container/setup/miniconda.sh -b -p /opt/conda
        rm /my_container/setup/miniconda.sh

        export PATH="/opt/conda/bin:$PATH"

        mkdir /code/
        mkdir /dataset/
        mkdir /tmp_job_data/
        mkdir /final_job_data/

        cd /my_container/setup/
        conda env create --file envs/maniskill3/environment.yaml -y
        . /opt/conda/etc/profile.d/conda.sh
        conda activate /opt/conda/envs/maniskill3_env

        pip install -r requirements.txt

        conda clean -afy

        mkdir -p /my_container/.sapien/physx/105.1-physx-5.3.1.patch0/
        wget https://github.com/sapien-sim/physx-precompiled/releases/download/105.1-physx-5.3.1.patch0/linux-so.zip --directory-prefix=/my_container/.sapien/physx/105.1-physx-5.3.1.patch0/
        unzip /my_container/.sapien/physx/105.1-physx-5.3.1.patch0/linux-so.zip -d /my_container/.sapien/physx/105.1-physx-5.3.1.patch0/
        rm /my_container/.sapien/physx/105.1-physx-5.3.1.patch0/linux-so.zip

%environment
        SHELL=/bin/bash
        export SHELL
        export DEBIAN_FRONTEND=noninteractive
        export PATH="/opt/conda/envs/maniskill3_env/bin:/opt/conda/bin:$PATH"
        export NVIDIA_DRIVER_CAPABILITIES=all
        export NVIDIA_VISIBLE_DEVICES=all
        export PYTHONPATH="/code/Maniskill3-Singularity-Example/src/:$PYTHONPATH"
%runscript
        rm -rf $HOME/.sapien/
        mkdir -p $HOME/.sapien/
        cp -r /my_container/.sapien/* $HOME/.sapien/
        . /opt/conda/etc/profile.d/conda.sh
        conda activate /opt/conda/envs/maniskill3_env
        cd /code/Maniskill3-Singularity-Example/
        exec $@
